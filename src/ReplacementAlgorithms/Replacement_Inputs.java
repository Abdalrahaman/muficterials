/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ReplacementAlgorithms;

import Muficterials.Panels2;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author dell
 */
public class Replacement_Inputs extends javax.swing.JFrame {

    /**
     * Creates new form Replacement_Inputs
     */
    int number1 ;
    int number2 ;
    String TheMethod="- Select -";
    JButton btn ;
    JTable table ;
    JScrollPane scrollPane ;
    int [] Nnumbers ; 
    int[][]arrvalues ;
    JLabel lb;
    JPanel cFP ;
    int FaultPage ;
        public Replacement_Inputs() {
        initComponents();
        ImageIcon icon = new ImageIcon(getClass().getResource("/Images/ImageIcon.png"));
this.setIconImage(icon.getImage());
        
        jPanel4.setLayout(new BorderLayout(20,100));
        
        cFP = new JPanel();
        cFP.setLayout(new FlowLayout(FlowLayout.CENTER));
        FaultPage = 0 ;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Replacement Algorithms");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 116, 138));

        jPanel2.setBackground(new java.awt.Color(0, 73, 2));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 0));
        jLabel2.setText("Enter the Frame number");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 0));
        jLabel3.setText("Enter the page number");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 0));
        jLabel4.setText("Type");

        jComboBox1.setBackground(new java.awt.Color(51, 153, 0));
        jComboBox1.setFont(new java.awt.Font("Simplified Arabic", 0, 20)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 153, 153));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select -", "OPT", "LRU", "FIFO", "CLOCK" }));
        jComboBox1.setBorder(null);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                    .addComponent(jTextField2))
                .addGap(24, 24, 24))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(131, 131, 131))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(55, 55, 55)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(51, 116, 138));

        jLabel1.setFont(new java.awt.Font("Yu Gothic Medium", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Replacement Algorithms");

        jPanel5.setBackground(new java.awt.Color(51, 116, 138));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel5MouseExited(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_Back_To_50px.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1094, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 73, 2));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 694, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        jPanel4.removeAll();
        cFP.removeAll();

        int num1 = 0 ;
        int num2 = 0;
        
        try{
            
        num1 = Integer.parseInt(jTextField1.getText());
        
         num2 = Integer.parseInt(jTextField2.getText());
         
          this.number1 = num1;
                this.number2 = num2;
                
                 if("- Select -".equals(TheMethod)){
           
                   JOptionPane.showMessageDialog(null,"Please ?! Choose an Operation");

           }else{

        Nnumbers = new int[number2];
       arrvalues = new int[number1][number2];
//        String[]colHeadings = {"Numbers"};
//
//DefaultTableModel model = new DefaultTableModel(number2, colHeadings.length) ;
//model.setColumnIdentifiers(colHeadings);
//JTable table = new JTable(model);
//
//
//jPanel4.add(table , BorderLayout.BEFORE_LINE_BEGINS);
//jPanel4.validate();


 btn = new JButton("Solve");

        btn.setFont(new Font("Arial", Font.BOLD, 18));
        btn.setBackground(new Color(0,127,166));
        btn.setForeground(new Color(204,204,0));

JPanel pt = new JPanel();
pt.setLayout(new FlowLayout(FlowLayout.CENTER));
pt.setBackground(new Color(0,73,2));
String columnNames[] = { "Numbers" };
        String dataValues[][] = new String [number2][1];
        
        table = new JTable(dataValues, columnNames);
        DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
//                 table.getColumnModel().getColumn(0).setHeaderRenderer(cellRenderer);

table.getColumnModel().getColumn(0).setCellRenderer(cellRenderer);
            
          cellRenderer.setHorizontalAlignment(JLabel.CENTER);

         table.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
         scrollPane = new JScrollPane( table );
          DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
          
          dtcr.setHorizontalTextPosition((int) CENTER_ALIGNMENT);

         scrollPane.setPreferredSize(new Dimension(100, 220));
        scrollPane.setBackground(Color.red);
        
        table.setForeground(Color.blue);
        table.setGridColor(Color.ORANGE);
        pt.add(scrollPane);
                jPanel4.add(pt , BorderLayout.WEST);

              lb = new JLabel("The fault Pages  = 0");
              lb.setFont(new Font("Arial", Font.BOLD, 18));
        lb.setForeground(new Color(204,0,0));

              cFP.add(lb);
        jPanel4.add(cFP , BorderLayout.NORTH);
        
        jPanel4.add(btn , BorderLayout.SOUTH);
        
        jPanel4.revalidate();
        jPanel4.repaint();
        
        ReadValues() ;
        
        if (table.isEditing())
    table.getCellEditor().stopCellEditing();
                 }
        
                 
                  
                  
                  
        }catch(Exception e){
                                    JOptionPane.showMessageDialog(null,"Please ?! Enter a number");

        }
         
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        JComboBox CB = (JComboBox)evt.getSource() ;
        
         TheMethod = (String)CB.getSelectedItem();
         
         if("- Select -".equals(TheMethod)){
           
                                   JOptionPane.showMessageDialog(null,"Please ?! Choose an Operation");

           }
         
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
               this.setVisible(false);
               Panels2 elwagha = new Panels2();
               elwagha.setLocationRelativeTo(null);
               elwagha.setVisible(true);
               
               elwagha.addWindowListener(new java.awt.event.WindowAdapter() {
    @Override
    public void windowClosing(java.awt.event.WindowEvent windowEvent) {
        if (JOptionPane.showConfirmDialog(elwagha, 
            "Are you sure to close this window?", "Really Closing?", 
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }
});
    }//GEN-LAST:event_jPanel5MouseClicked

    private void jPanel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseEntered
        // TODO add your handling code here:
        jPanel5.setBackground(new Color(0,73,2));
    }//GEN-LAST:event_jPanel5MouseEntered

    private void jPanel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseExited
        // TODO add your handling code here:
                jPanel5.setBackground(new Color(51,116,138));
    }//GEN-LAST:event_jPanel5MouseExited

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        
                if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                
                 jPanel4.removeAll();
cFP.removeAll();
        int num1 = 0 ;
        int num2 = 0;
        
        try{
            
        num1 = Integer.parseInt(jTextField1.getText());
        
         num2 = Integer.parseInt(jTextField2.getText());
         
          this.number1 = num1;
                this.number2 = num2;
                
                 if("- Select -".equals(TheMethod)){
           
                   JOptionPane.showMessageDialog(null,"Please ?! Choose an Operation");

           }else{

        Nnumbers = new int[number2];
       arrvalues = new int[number1][number2];
//        String[]colHeadings = {"Numbers"};
//
//DefaultTableModel model = new DefaultTableModel(number2, colHeadings.length) ;
//model.setColumnIdentifiers(colHeadings);
//JTable table = new JTable(model);
//
//
//jPanel4.add(table , BorderLayout.BEFORE_LINE_BEGINS);
//jPanel4.validate();


 btn = new JButton("Solve");

        btn.setFont(new Font("Arial", Font.BOLD, 18));
        btn.setBackground(new Color(0,127,166));
        btn.setForeground(new Color(204,204,0));

JPanel pt = new JPanel();
pt.setLayout(new FlowLayout(FlowLayout.CENTER));
pt.setBackground(new Color(0,73,2));
String columnNames[] = { "Numbers" };
        String dataValues[][] = new String [number2][1];
        
        table = new JTable(dataValues, columnNames);
        
         DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
         
//         table.getColumnModel().getColumn(0).setHeaderRenderer(cellRenderer);

table.getColumnModel().getColumn(0).setCellRenderer(cellRenderer);
            
          cellRenderer.setHorizontalAlignment(JLabel.CENTER);
          
         table.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
         scrollPane = new JScrollPane( table );
          DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
          
          dtcr.setHorizontalTextPosition((int) CENTER_ALIGNMENT);

         scrollPane.setPreferredSize(new Dimension(100, 220));
        scrollPane.setBackground(Color.red);
        
        table.setForeground(Color.blue);
        table.setGridColor(Color.ORANGE);
        pt.add(scrollPane);
                jPanel4.add(pt , BorderLayout.WEST);

              lb = new JLabel("The fault Pages  = 0");
              lb.setFont(new Font("Arial", Font.BOLD, 18));
        lb.setForeground(new Color(204,0,0));

              cFP.add(lb);
        jPanel4.add(cFP , BorderLayout.NORTH);
        
        jPanel4.add(btn , BorderLayout.SOUTH);
        
        jPanel4.revalidate();
        jPanel4.repaint();
        
        ReadValues() ;
        
         if (table.isEditing())
    table.getCellEditor().stopCellEditing();
                 }
        
                 
                 
                  
                  
        }catch(Exception e){
                                    JOptionPane.showMessageDialog(null,"Please ?! Enter a number");

        }
         
                
                }

    }//GEN-LAST:event_jButton1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
        
                        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                            
                            jPanel4.removeAll();
        cFP.removeAll();

        int num1 = 0 ;
        int num2 = 0;
        
        try{
            
        num1 = Integer.parseInt(jTextField1.getText());
        
         num2 = Integer.parseInt(jTextField2.getText());
         
          this.number1 = num1;
                this.number2 = num2;
                
                 if("- Select -".equals(TheMethod)){
           
                   JOptionPane.showMessageDialog(null,"Please ?! Choose an Operation");

           }else{

        Nnumbers = new int[number2];
       arrvalues = new int[number1][number2];
//        String[]colHeadings = {"Numbers"};
//
//DefaultTableModel model = new DefaultTableModel(number2, colHeadings.length) ;
//model.setColumnIdentifiers(colHeadings);
//JTable table = new JTable(model);
//
//
//jPanel4.add(table , BorderLayout.BEFORE_LINE_BEGINS);
//jPanel4.validate();


 btn = new JButton("Solve");

        btn.setFont(new Font("Arial", Font.BOLD, 18));
        btn.setBackground(new Color(0,127,166));
        btn.setForeground(new Color(204,204,0));

JPanel pt = new JPanel();
pt.setLayout(new FlowLayout(FlowLayout.CENTER));
pt.setBackground(new Color(0,73,2));
String columnNames[] = { "Numbers" };
        String dataValues[][] = new String [number2][1];
        
        table = new JTable(dataValues, columnNames);
         DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
//                  table.getColumnModel().getColumn(0).setHeaderRenderer(cellRenderer);

table.getColumnModel().getColumn(0).setCellRenderer(cellRenderer);
            
           cellRenderer.setHorizontalAlignment(JLabel.CENTER);
                            
         table.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
         scrollPane = new JScrollPane( table );
          DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
          
          dtcr.setHorizontalTextPosition((int) CENTER_ALIGNMENT);

         scrollPane.setPreferredSize(new Dimension(100, 220));
        scrollPane.setBackground(Color.red);
        
        table.setForeground(Color.blue);
        table.setGridColor(Color.ORANGE);
        pt.add(scrollPane);
                jPanel4.add(pt , BorderLayout.WEST);

              lb = new JLabel("The fault Pages  = 0");
              lb.setFont(new Font("Arial", Font.BOLD, 18));
        lb.setForeground(new Color(204,0,0));

              cFP.add(lb);
        jPanel4.add(cFP , BorderLayout.NORTH);
        
        jPanel4.add(btn , BorderLayout.SOUTH);
        
        jPanel4.revalidate();
        jPanel4.repaint();
        
        ReadValues() ;
        
        if (table.isEditing())
    table.getCellEditor().stopCellEditing();
                 }
        
                 
                  
                  
                  
        }catch(Exception e){
                                    JOptionPane.showMessageDialog(null,"Please ?! Enter a number");

        }
         
                            
                        }
    }//GEN-LAST:event_jTextField2KeyPressed

    
    public void ReadValues(){
    
    btn.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            
            
            try{

            for (int i = 0; i < Nnumbers.length; i++) {

                Nnumbers[i] =Integer.parseInt(table.getValueAt(i, 0).toString()) ;
            }

//for (int i = 0; i < Nnumbers.length; i++) {
//
//    System.out.println(Nnumbers[i]);
//}


switch(TheMethod){

    case "OPT":
        
         OPT_Algorithm perform1 = new OPT_Algorithm(number2, number1 , Nnumbers);
        
        perform1.Insert_DefaultArray();
        
        arrvalues = perform1.returnTable() ;
        FaultPage = perform1.returnFaultpage();
        Results(arrvalues);
        
        
        break ;
        
    case "LRU":
        
        LRU_Algorithm perform2 = new LRU_Algorithm(number2 , number1, Nnumbers);
        
        perform2.Insert_DefaultArray();
        
        arrvalues = perform2.returnTable() ;
                FaultPage = perform2.returnFaultpage();

        Results(arrvalues);
        

        break ;
        
    case "FIFO":
        
        FIFO_Algorithm perform3 = new FIFO_Algorithm(number2 , number1, Nnumbers);
        
        perform3.Insert_DefaultArray();
        
        arrvalues = perform3.returnTable() ;
                FaultPage = perform3.returnFaultpage();

        Results(arrvalues);
        

        break ;
        
    case "CLOCK":
        
        Clock_Algorithm perform4 = new Clock_Algorithm(number2 , number1, Nnumbers);
        
        perform4.Insert_DefaultArray();
        
        arrvalues = perform4.returnTable() ;
                        FaultPage = perform4.returnFaultpage();

        Results(arrvalues);
        

        break ;
        
    default:
        
                JOptionPane.showMessageDialog(null,"Please ?! Choose an Operation");
break;

}

            }catch(Exception ec){
            
                JOptionPane.showMessageDialog(null,"Please ?! Enter numbers in this Table");

            }
        }
    });
    
    
    btn.addKeyListener(new KeyListener() {
        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {

                if(e.getKeyCode() == KeyEvent.VK_ENTER){
                    
                     
            try{

            for (int i = 0; i < Nnumbers.length; i++) {

                Nnumbers[i] =Integer.parseInt(table.getValueAt(i, 0).toString()) ;
            }

//for (int i = 0; i < Nnumbers.length; i++) {
//
//    System.out.println(Nnumbers[i]);
//}


switch(TheMethod){

    case "OPT":
        
         OPT_Algorithm perform1 = new OPT_Algorithm(number2, number1 , Nnumbers);
        
        perform1.Insert_DefaultArray();
        
        arrvalues = perform1.returnTable() ;
        FaultPage = perform1.returnFaultpage();
        Results(arrvalues);
        
        
        break ;
        
    case "LRU":
        
        LRU_Algorithm perform2 = new LRU_Algorithm(number2 , number1, Nnumbers);
        
        perform2.Insert_DefaultArray();
        
        arrvalues = perform2.returnTable() ;
                FaultPage = perform2.returnFaultpage();

        Results(arrvalues);
        

        break ;
        
    case "FIFO":
        
        FIFO_Algorithm perform3 = new FIFO_Algorithm(number2 , number1, Nnumbers);
        
        perform3.Insert_DefaultArray();
        
        arrvalues = perform3.returnTable() ;
                FaultPage = perform3.returnFaultpage();

        Results(arrvalues);
        

        break ;
        
    case "CLOCK":
        
        Clock_Algorithm perform4 = new Clock_Algorithm(number2 , number1, Nnumbers);
        
        perform4.Insert_DefaultArray();
        
        arrvalues = perform4.returnTable() ;
                        FaultPage = perform4.returnFaultpage();

        Results(arrvalues);
        

        break ;


}

            }catch(Exception ec){
            
                JOptionPane.showMessageDialog(null,"Please ?! Enter numbers in this Table");

            }
                    
                }

        }

        @Override
        public void keyReleased(KeyEvent e) {
        }
    });
    
    }
    
    public void Results(int[][]arrvalues ){
    
    String[]num = new String[number2];
    String [][]valueResult = new String[number1+1][number2];
    
        for (int i = 0; i < num.length; i++) {

         num[i] = Integer.toString(Nnumbers[i]);            
        }
    
        for (int i = 0; i < number2; i++) {
            for (int j = 0; j < number1+1; j++) { // change

                valueResult[j][i] = Integer.toString(arrvalues[j][i]);
                
                if("-2".equals(valueResult[j][i]))
                    valueResult[j][i] = " " ;
            }  
        }
        
        for (int i = 0; i < number2; i++) {

            if("0".equals(valueResult[number1][i]))
                valueResult[number1][i] = " " ;
            else
                valueResult[number1][i] = "F" ;
        }
        
        for (int i = 0; i < number2; i++) {
            for (int k = 0; k < number1; k++) {

                System.out.println(valueResult[k][i]);                
            }
            
        }
       
        
        JTable table1 = new JTable(valueResult, num);
        DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
            for (int i = 0; i < number2 ; i++) {
//               table1.getColumnModel().getColumn(i).setHeaderRenderer(cellRenderer);

table1.getColumnModel().getColumn(i).setCellRenderer(cellRenderer);
            }
                            cellRenderer.setHorizontalAlignment(JLabel.CENTER);

        table1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
int index = 0;
                while (index < number2) {
                    TableColumn a = table1.getColumnModel().getColumn(index);
                    a.setPreferredWidth(50);
                    index++;
                }

        JScrollPane scrollPane1 = new JScrollPane( table1 );
//        scrollPane1.setPreferredSize(new Dimension(300, 220));
        scrollPane1.setBackground(Color.red);
        table1.setForeground(Color.blue);
        table1.setGridColor(Color.ORANGE);

        jPanel4.add(scrollPane1 , BorderLayout.CENTER);

        lb.setText("The fault Pages  = "+FaultPage);
                lb.setForeground(new Color(0,73,2));

        jPanel4.validate();
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Replacement_Inputs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Replacement_Inputs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Replacement_Inputs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Replacement_Inputs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Replacement_Inputs().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
